name: Python package

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --all-extras --no-interaction --no-root

      - name: Install library
        run: poetry install --all-extras --no-interaction

      - name: Check formatting with black
        run: |
          source .venv/bin/activate
          black --check aio_overpass/
        continue-on-error: true

      - name: Lint with Ruff
        run: |
          source .venv/bin/activate
          ruff check aio_overpass/
        continue-on-error: true

      - name: Test with pytest
        run: |
          source .venv/bin/activate
          pytest -vv --cov=aio_overpass/ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        continue-on-error: true

# Run tests with combinations of major dependency releases.
#
# For numpy, the C API version matters:
# https://github.com/numpy/numpy/blob/main/numpy/core/code_generators/cversions.txt

name: Test different dependency versions

on: workflow_dispatch  # quite a few jobs, so let's run this manually only

jobs:
  test:
    name: Test dependency combination
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Using 4*4*3=48 out of the maximum 256 jobs
        python: ["3.9", "3.10", "3.11", "3.12.0-rc.1"]
        aiohttp: ["3.8"]
        joblib: ["1.3"]
        networkx: ["2.7", "2.8", "3.0", "3.1"]
        numpy: ["1.23", "1.24", "1.25"]
        shapely: ["2.0"]
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          cache: 'poetry'

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache/restore@v3  # only restore cache if available; no saving in post step
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          source .venv/bin/activate
          poetry install --all-extras --no-interaction --no-root

      - name: Install library
        run: poetry install --all-extras --no-interaction

      - name: Install different dependency versions
        run: |
          source .venv/bin/activate
          poetry add aiohttp=~${{ matrix.aiohttp }}
          poetry add joblib=~${{ matrix.joblib }}
          poetry add networkx=~${{ matrix.networkx }}
          poetry add shapely=~${{ matrix.shapely }}
          poetry add numpy=~${{ matrix.numpy }}

      - name: Test with pytest
        run: |
          source .venv/bin/activate
          pytest -vv
